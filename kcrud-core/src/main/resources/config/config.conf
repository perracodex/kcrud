# Copyright (c) 2024-Present Perracodex. Use of this source code is governed by an MIT license.

# For configuration detailed information see:
# https://ktor.io/docs/server-configuration-file.html
# https://ktor.io/docs/server-configuration-file.html#predefined-properties

include "config_api_schema.conf"
include "config_cors.conf"
include "config_database.conf"
include "config_security.conf"
include "config_ssl.conf"
include "config_runtime.conf"

ktor {
	# Set to 'true' to enable development mode.
	# This make Ktor to enables features like auto-reload, better tracing, etc.,
	# See: https://ktor.io/docs/server-development-mode.html
	development: true
	development: ${?KCRUD_KTOR_DEVELOPMENT}

	deployment {
		port: 8080
		port: ${?KCRUD_KTOR_DEPLOYMENT_PORT}

		sslPort: 8443
		sslPort: ${?KCRUD_KTOR_DEPLOYMENT_SSL_PORT}

		host: "localhost"
		host: ${?KCRUD_KTOR_DEPLOYMENT_HOST}

		# The watch paths are directories Ktor will monitor for changes.
		# Useful when development mode is enabled, to automatically
		# reload classes/resources when modified.
		watch: [classes, resources]

		// Timeout settings for handling client requests and server responses.
		// https://api.ktor.io/ktor-server/ktor-server-netty/io.ktor.server.netty/-netty-application-engine/-configuration/index.html

		// Time to wait for reading the client's request.
		// A value of "0" disables the timeout, allowing the server to wait indefinitely.
		// This can be useful for large file uploads or slow client connections but may
		// expose the server to risks like resource exhaustion during prolonged requests.
		requestReadTimeoutSeconds = 0
		requestReadTimeoutSeconds = ${?KDOC_KTOR_DEPLOYMENT_REQUEST_READ_TIMEOUT_SECONDS}
		// Time to wait for sending the response to the client.
		// A non-zero value ensures the server doesn't hang indefinitely when the client
		// is slow or unresponsive during response transmission
		responseWriteTimeoutSeconds = 10
		responseWriteTimeoutSeconds = ${?KDOC_KTOR_DEPLOYMENT_RESPONSE_WRITE_TIMEOUT_SECONDS}

		# https://ktor.io/docs/server-configuration-file.html#predefined-properties
		# https://stackoverflow.com/questions/78091418/ktor-netty-configuration-values-for-expected-load/78182668#78182668
		# https://medium.com/@akhaku/netty-data-model-threading-and-gotchas-cab820e4815a
		connectionGroupSize = 8 # Count of threads used to accept new connections and start call processing.
		workerGroupSize = 16 # Event group size for processing connections, parsing messages, and internal engine operations.
		callGroupSize = 32 # Minimum size of a thread pool used to process application calls.

		# Shutdown timeout and grace period. Should be in the range of 2 to 30 seconds.
		# Defaults are set to 0 for a faster shutdown / restart in development mode.
		shutdownGracePeriod = 0 # Maximum time for a server to stop accepting new requests, (ms).
		shutdownGracePeriod = ${?KCRUD_KTOR_DEPLOYMENT_SHUTDOWN_GRACE_PERIOD_MS}
		shutdownTimeout = 0 # Maximum time to wait until the server stops completely. Must be >= shutdownGracePeriod, (ms).
		shutdownTimeout = ${?KCRUD_KTOR_DEPLOYMENT_SHUTDOWN_TIMEOUT_MS}

		# Netty HTTP server configuration.
		# https://camel.apache.org/components/4.4.x/netty-http-component.html
		maxInitialLineLength = 4096 # Max length for the initial request line (method, URI, and version), (bytes).
		maxHeaderSize = 8192 # Max total size of all HTTP headers in a request, (bytes).
		maxChunkSize = 8192 # Maximum size of HTTP content chunks; larger content is split, (bytes).
	}
}
